from pathlib import Path
from sklearn.model_selection import train_test_split
import shutil
from tqdm import tqdm

# Specify the directory of the original image folders
base_directory = Path('4_percent')  # 'images' will be the whole dataset base_directory

# New directory structure for image data
new_base_directory = Path('4_percent_image_data')  # 'image_data' will be the whole dataset new_base_directory

# Create directories for train and test sets
train_directory = new_base_directory / 'train'
test_directory = new_base_directory / 'test'
train_directory.mkdir(parents=True, exist_ok=True)
test_directory.mkdir(parents=True, exist_ok=True)

print("Starting to organize images into training and testing sets...")

# Process each category folder
for cluster_folder in tqdm(list(base_directory.iterdir()), desc="Processing folders"):
    if cluster_folder.is_dir():
        cluster_name = cluster_folder.name

        # Get all image files
        images = list(cluster_folder.glob('*.jpg*'))

        # Split into training and testing sets (80% training, 20% testing)
        train_images, test_images = train_test_split(images, test_size=0.2, random_state=0)

        # Create subdirectories for train and test sets
        train_subdir = train_directory / cluster_name
        test_subdir = test_directory / cluster_name
        train_subdir.mkdir(parents=True, exist_ok=True)
        test_subdir.mkdir(parents=True, exist_ok=True)

        print(f"Organizing images for cluster '{cluster_name}'...")

        # Copy images to respective train and test directories
        for image in tqdm(train_images, desc=f"Copying training images for cluster {cluster_name}"):
            shutil.copy(image, train_subdir / image.name)
        for image in tqdm(test_images, desc=f"Copying testing images for cluster {cluster_name}"):
            shutil.copy(image, test_subdir / image.name)

print("Training and testing images have been successfully organized.")
