from torchvision import datasets, transforms
from torch.utils.data import DataLoader


def create_dataloaders(train_dir: str,
                       test_dir: str,
                       transform: transforms.Compose,
                       batch_size: int):  # parameter num_workers sometimes causes error in M1 Macbook

    """
    Taking in a training directory and testing directory path and turns them into PyTorch Datasets
    and then into PyTorch Dataloaders.

    Args:
        train_dir: Path to training directory
        test_dir: Path to testing directory
        transform: torchvision transforms to perform on training and testing data.
        batch_size: Number of samples per batch in each of the DataLoaders.
        num_workers: An integer for number of workers per DataLoader.

    Returns:
        A tuple of (train_dataloader, test_dataloader, class_names).
        Where class_names is a list of the target classes.

            Example usage:
        train_dataloader, test_dataloader, class_names =
        create_dataloaders(train_dir = path_to_train_dir,
                           test_dir = path_to_test_dir,
                           transform = some_transform,
                           batch_size = 32)

    """

    # Use ImageFolder to create dataset(s)
    train_data = datasets.ImageFolder(root=train_dir, transform=transform)
    test_data = datasets.ImageFolder(root=test_dir, transform=transform)

    # Get class names
    class_names = train_data.classes

    # Turn images into data loaders
    train_dataloader = DataLoader(dataset=train_data,
                                  batch_size=batch_size,
                                  shuffle=True,
                                  pin_memory=True)
    test_dataloader = DataLoader(dataset=test_data,
                                 batch_size=batch_size,
                                 shuffle=False,
                                 pin_memory=True)

    return train_dataloader, test_dataloader, class_names
