from sklearn.cluster import KMeans
import numpy as np
from PIL import Image
from pathlib import Path
from tqdm import tqdm
import pandas as pd

# Load the CSV file
file_path = 'raw_pe_images.csv'
df = pd.read_csv(file_path)

# Select rows where malware=1 and apply KMeans clustering
malware_data = df[df['malware'] == 1]
X = malware_data.drop(columns=['hash', 'malware']).values
kmeans = KMeans(n_clusters=9, random_state=0).fit(X)

# Assign cluster labels to the data where malware=1, and set data with malware=0 to cluster 0
df.loc[df['malware'] == 1, 'cluster'] = kmeans.labels_ + 1  # Assign cluster labels 1-9 to data with malware=1
df.loc[df['malware'] == 0, 'cluster'] = 0  # Assign cluster 0 to data with malware=0


# Function to create and save images
def create_and_save_image(row):
    pixels = row[1:-2]  # Exclude 'hash', 'malware', and 'cluster'
    image_array = np.array(pixels, dtype=np.uint8).reshape(32, 32)
    image = Image.fromarray(image_array)
    cluster = int(row[-1])  # Ensure cluster is an integer
    hash_value = row[0]
    directory = Path(f'images/{cluster}')
    directory.mkdir(parents=True, exist_ok=True)
    image.save(directory / f'{hash_value}.jpg')


# Use tqdm to show a progress bar
tqdm.pandas(desc="Processing images")

# Apply the function to each row in the dataframe
df.progress_apply(create_and_save_image, axis=1)
